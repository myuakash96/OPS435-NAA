This is how my code looks as shown below >>>

#!/usr/bin/env python3
'''
OPS435 Assignment 1 - Winter 2021
Program: a1_myuakash.py (replace [Seneca_name] with your Seneca User name)
Author: myuakash
The python code in this file (a1_myuakash.py) is original work written by
"myuakash". No code in this file is copied from any other source 
except those provided by the course instructor, including any person, 
textbook, or on-line resource. I have not shared this python script 
with anyone or anything except for submission for grading.  
I understand that the Academic Honesty Policy will be enforced and 
violators will be reported and appropriate action will be taken.
'''
import os
import sys

def leap_year(obj):
    '''
    check if obj1 is a leap year or not 
    '''
    status=False
    if ( obj%400 == 0) or ( ( obj%4 == 0 ) and ( obj%100 != 0)) :
        status= True
    else:
        status= False
    return status

def sanitize(obj1,obj2):
    '''
    convert obj1 into number and remove everything else so if element of obj1 in obj2 then append to results 
    '''
    results = ''
    for _ in obj1:
        if _ in obj2:
            results += str(_)
    return results
    
def size_check(obj,intobj):
    '''
    check if length of obj1  is equals to length of obj2
    '''
    status=False
    if len(obj) ==  intobj:
        status= True
    else:
        status= False
    return status

def range_check(obj1, obj2):
    '''
    check if obj1 lies between the range of obj2 
    '''
    status=False
    if int(obj1) in range(obj2[0], obj2[1]+1):
        status = True
    else:
        status = False   
    return status
    
def usage():    
    status='Usage: a1_myuakash.py YYYYMMDD|YYYY/MM/DD|YYYY-MM-DD|YYYY.MM.DD'
    return status

if __name__ == "__main__":
   # step 1
   if len(sys.argv) != 2:
      print(usage())
      sys.exit()
   # step 2
   month_name = ['Jan','Feb','Mar','Apr','May','Jun',
                 'Jul','Aug','Sep','Oct','Nov','Dec']
   days_in_month = {1:31, 2:28, 3:31, 4:30, 5:31, 6:30,
                    7:31, 8:31, 9:30, 10:31, 11:30, 12:31}
   user_raw_data = sys.argv[1]
   # step 3
   allow_chars = '0123456789'
   dob = sanitize(user_raw_data, allow_chars)
   #print('Sanitized user data:', dob)
   # setp 4
   result = size_check(dob,8)
   if result == False:
       print("Error 09: wrong date entered")
       sys.exit()
   # step 5
   year = int(dob[0:4])
   month = int(dob[4:6])
   day = int(dob[6:])
   # step 6
   result = range_check(year,(1900,9999))
   if result == False:
       print("Error 10: year out of range, must be 1900 or later")
       sys.exit()
   result = range_check(month,(1,12))
   if result == False:
       print("Error 02: wrong month entered")
       sys.exit()
   result = leap_year(year)
   if result == True:
       days_in_month[2] = 29
   result = range_check(day, (1, days_in_month[month]))
   if result == False:
       print("Error 03: wrong day entered")
       sys.exit()
   # step 7
   new_dob = str(month_name[month - 1])+' '+ str(day)+', '+str(year)
   # step 8
   print(new_dob)


> I have used the keywords and functions as follows:-

1. Documentation = I used doctstring – “ documentation text”
for example = #!/usr/bin/env python3
"""
OPS435 Assignment 1 - Winter 2021
Program: a1_myuakash.py (replace student_id with your Seneca User name)
Author: "myuakash"
The python code in this file is original work written by
Md Yasin Uddin Akash. -------------------------------------continued
"""

2. Data validation functions: - 

a) size_check(): check if length of obj1  is equals to length of obj2

b) leapyear() : given year is a leap year or not

example:- leap_year() takes a valid year string in 'YYYY' format and returns a true/False statement corelating to if it’s a leap year.

leap_year(‘2019’)  -> ‘False’
leap_year(‘1600’) -> ‘True’

c) value_check(): the given day is greater than the maximum number of days for a given month

example:- value_check() takes a date string in 'YYYYMMDD' format and returns a true or false statement relaying if it is a valid date.
value_check ('20171231') -> 'True'
			value_check ('20188132') -> 'False'
			 value_check ('Alphabet') -> 'False'

d) import os

e) import sys 

f) global argstep

g) def_sanitize(): convert obj1 into number and remove everything else so if element of obj1 in obj2 then append to results 

h) def range_check(obj1, obj2): check if obj1 lies between the range of obj2 

i) print() : to print the output statement or the result of the arguments.
